name: Release CI

on:
  push:
    branches: [ master ]

jobs:
  release:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v2
      with:
        ref: 'master'
    - name: Get Latest Tag 
      id: get_latest_tag
      uses: oprypin/find-latest-tag@v1
      with:
        repository: vortexdatanet/net-watchdog  # The repository to scan.
        releases-only: true  # We know that all relevant tags have a GitHub release for them.
        
    - name: Draft Release
      id: draft_release
      uses: release-drafter/release-drafter@v5
      with:
        publish: false
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        
    - name: Setup Maven 3
      uses: aahmed-se/setup-maven@v3
      
    - name: Run Maven tests
      run: mvn clean test

    - name: Clean, validate and compile
      run: mvn clean validate compile
      
    - name: Assembly
      run: | 
        mvn assembly:single
        mv target/net-watchdog-${{ steps.draft_release.outputs.tag_name }}-jar-with-dependencies.jar target/net-watchdog.jar
        
    - name: Upload Release Asset
      uses: actions/upload-release-asset@v1.0.2
      with:
        # The URL for uploading assets to the release
        upload_url: ${{ steps.draft_release.outputs.upload_url }}
        # The path to the asset you want to upload
        asset_path: target/net-watchdog.jar
        # The name of the asset you want to upload
        asset_name: net-watchdog.jar
        # The content-type of the asset you want to upload. See the supported Media Types here: https://www.iana.org/assignments/media-types/media-types.xhtml for more information
        asset_content_type: application/jar
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        
    - name: Publish Release
      # You may pin to the exact commit or the version.
      # uses: eregon/publish-release@d6aee8c288e653387d895ee64d559fc0dd63339d
      uses: eregon/publish-release@v1.0.3
      with:
        # The ID of the draft release to publish
        release_id: ${{ steps.draft_release.outputs.id }}
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        
    - name: Merge master into develop
      run: |
        git config user.email "administration@vortexdata.net"
        git config user.name "Release CI/CD"
        git pull origin develop --allow-unrelated-histories
        git checkout develop
        git merge master
        git push
